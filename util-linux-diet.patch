--- util-linux-ng-2.18/libmount/src/fs.c~	2010-06-08 10:44:20.000000000 +0200
+++ util-linux-ng-2.18/libmount/src/fs.c	2010-08-26 11:12:31.326572794 +0200
@@ -17,6 +17,9 @@
 #include <errno.h>
 #include <blkid.h>
 #include <stddef.h>
+#ifdef __dietlibc__
+#include <sys/stat.h> /* for major and minor macros */
+#endif
 
 #include "nls.h"
 #include "mountP.h"
--- util-linux-ng-2.18/libmount/src/tab_parse.c~	2010-06-07 12:35:06.000000000 +0200
+++ util-linux-ng-2.18/libmount/src/tab_parse.c	2010-08-26 11:16:35.762572782 +0200
@@ -9,6 +9,9 @@
 #include <limits.h>
 #include <dirent.h>
 #include <fcntl.h>
+#ifdef __dietlibc__
+#include <sys/stat.h> /* for makedev macro */
+#endif
 
 #include "at.h"
 #include "mangle.h"
--- util-linux-2.19/lib/strutils.c~	2011-01-31 16:43:47.000000000 +0100
+++ util-linux-2.19/lib/strutils.c	2011-02-10 12:49:12.221843465 +0100
@@ -12,6 +12,9 @@
 #include <sys/stat.h>
 #include <locale.h>
 #include <string.h>
+#ifdef __dietlibc__
+#include <stdint.h>
+#endif
 
 static int do_scale_by_power (uintmax_t *x, int base, int power)
 {
--- util-linux-2.19/libmount/src/utils.c~	2011-01-24 23:46:29.000000000 +0100
+++ util-linux-2.19/libmount/src/utils.c	2011-02-10 20:12:00.499611392 +0100
@@ -398,7 +398,11 @@
 	int rc = -1;
         struct passwd pwd;
 	struct passwd *pw;
+#ifdef _SC_GETPW_R_SIZE_MAX
 	size_t sz = sysconf(_SC_GETPW_R_SIZE_MAX);
+#else
+	size_t sz = 0;
+#endif
 	char *buf;
 
 	if (!username || !uid)
@@ -427,7 +431,11 @@
 	int rc = -1;
         struct group grp;
 	struct group *gr;
+#ifdef _SC_GETGR_R_SIZE_MAX
 	size_t sz = sysconf(_SC_GETGR_R_SIZE_MAX);
+#else
+	size_t sz = 0;
+#endif
 	char *buf;
 
 	if (!groupname || !gid)
--- util-linux-2.19/lib/at.c~	2011-01-31 16:43:47.000000000 +0100
+++ util-linux-2.19/lib/at.c	2011-02-10 20:30:37.336797058 +0100
@@ -7,6 +7,7 @@
 #include <stdlib.h>
 #include <fcntl.h>
 #include <sys/stat.h>
+#include <limits.h>
 
 #include "at.h"
 
--- util-linux-2.19/misc-utils/findmnt.c~	2011-01-31 16:43:47.000000000 +0100
+++ util-linux-2.19/misc-utils/findmnt.c	2011-02-10 20:54:23.100130391 +0100
@@ -30,6 +30,9 @@
 #endif
 #include <assert.h>
 #include <poll.h>
+#ifdef __dietlibc__
+#include <sys/stat.h> /* for major and minor macros */
+#endif
 
 #include <libmount.h>
 
--- util-linux-2.19/fsck/fsck.c~	2011-02-07 16:19:29.000000000 +0100
+++ util-linux-2.19/fsck/fsck.c	2011-02-10 21:09:27.024658725 +0100
@@ -270,7 +270,13 @@
 	if (verbose)
 		printf(_("Locking disk %s ... "), diskname);
 
-	inst->lock = open(diskname, O_CLOEXEC | O_RDONLY);
+	inst->lock = open(diskname,
+#ifdef O_CLOEXEC
+			O_CLOEXEC | O_RDONLY
+#else
+			O_RDONLY
+#endif
+			);
 	if (inst->lock >= 0) {
 		int rc = -1;
 
--- util-linux-2.19/configure.ac~	2011-02-10 21:28:23.395401725 +0100
+++ util-linux-2.19/configure.ac	2011-02-10 22:12:29.997898392 +0100
@@ -188,6 +188,8 @@
 	lchown \
 	llseek \
 	lseek64 \
+	mkostemp \
+	versionsort \
 	strtoull \
 	sysconf \
 	getdtablesize \
--- util-linux-2.19/misc-utils/findfs.c~	2011-01-31 16:43:47.000000000 +0100
+++ util-linux-2.19/misc-utils/findfs.c	2011-02-10 22:24:39.615735924 +0100
@@ -12,6 +12,7 @@
 
 #include <blkid.h>
 
+#include "c.h"
 #include "nls.h"
 
 static void __attribute__((__noreturn__)) usage(int rc)
--- util-linux-2.19/term-utils/scriptreplay.c~	2011-01-31 16:43:47.000000000 +0100
+++ util-linux-2.19/term-utils/scriptreplay.c	2011-02-10 22:26:22.019069258 +0100
@@ -28,6 +28,7 @@
 #include <unistd.h>
 #include <err.h>
 
+#include "c.h"
 #include "nls.h"
 
 #define SCRIPT_MIN_DELAY 0.0001		/* from original sripreplay.pl */
--- util-linux-2.19/libmount/src/tab_parse.c~	2011-02-10 23:28:02.091461025 +0100
+++ util-linux-2.19/libmount/src/tab_parse.c	2011-02-10 23:29:04.934794359 +0100
@@ -422,7 +422,13 @@
 
 	/* TODO: it would be nice to have a scandir() implementaion that
 	 *       is able to use already opened directory */
-	n = scandir(dirname, &namelist, NULL, versionsort);
+	n = scandir(dirname, &namelist, NULL,
+#ifdef HAVE_VERSIONSORT
+			versionsort
+#else
+			alphasort
+#endif
+			);
 	if (n <= 0)
 		return 0;
 
